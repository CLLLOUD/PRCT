//猜数字
//void game()
//{
//	srand((unsigned int)time(NULL));
//	int k = rand()%200+1;
//	printf("游戏开始\n请输入所猜数字=>");
//	int n;
//	scanf("%d", &n);
//	while (n != k)
//	{
//		if (n < k)
//			printf("猜测值偏小，请重新猜测=>");
//		if (n > k)
//			printf("猜测值偏大，请重新猜测=>");
//		scanf("%d", &n);
//	}
//	if (n = k)
//	{
//		printf("猜测正确!\n");
//	}
//}
//
//int main()
//{
//	printf("           劲爆猜数字             \n");
//	int a;
//	do {
//		printf("  输入1开始游戏    输入0退出游戏    \n");
//		scanf("%d", &a);
//		switch (a)
//		{
//		case 1:
//			game();
//			break;
//		case 0:
//			printf("已退出游戏");
//			break;
//		default:
//			printf("请重新输入");
//			scanf("%d", &a);
//		}
//	} while (a);

	//二分查找
	//int arr[14] = { 1,3,5,7,8,9,12,15,16,17,20,25,27,31 };
	//int len = sizeof(arr) / sizeof(arr[0]);
	//int lft = 0;
	//int rgt = len - 1;
	//int x = 12;
	//while (lft <= rgt)
	//{
	//	int mid = (lft + rgt) / 2;
	//	if (x == arr[mid])
	//	{
	//		printf("已找出，下标为%d", mid);
	//		break;
	//	}
	//	if (x < arr[mid])
	//	{
	//		rgt = mid-1;
	//	}
	//	if (x > arr[mid])
	//	{
	//		lft = mid+1;
	//	}
	//}
	//if (lft > rgt)
	//	printf("未能找出");

	//打印乘法口诀表
	//int n = 1;
	//for (; n <= 9; n++)
	//{
	//	int m = 1;
	//	for (; m <= n; m++)
	//	{
	//		printf("%d*%d=%2d ", n, m, n*m);
	//      %2d表示两位整形 位数不够则空格补充 右对齐（%-2d左对齐）
	//	}
	//		printf("\n");
	//}

	//求最大数
	//int ele;
	//int arr[1000];
	//int i = 0;
	//while (1)
	//{
	//	scanf("%d", &ele);
	//	int c=getchar();
	//	arr[i] = ele;
	//	i++;
	//	if (c == '\n')
	//		break;
	//}
	//int Max = arr[0];
	//int k = 1;
	//int len = sizeof(arr) / sizeof(arr[0]);
	//for (; k < len; k++)
	//{
	//	if (Max < arr[k])
	//		Max = arr[k];
	//}
	//printf("最大值为%d", Max);

	//int i = 1;
	//double sum = 0.00;
	//int flag = 1;
	//for (; i < 101; i++)
	//{
	//	sum += flag * 1.00 / i;
	//	flag = -flag;
	//}
	//printf("%lf", sum);

	//计算含数字9的数
	//int n=1;
	//int cnt = 0;
	//for (; n < 101; n++)
	//{
	//	if ((n % 9 == 0) || (n / 10 == 9))
	//	{
	//		printf("%d ", n);
	//		cnt++;
	//	}
	//}
	//printf("\n共计%d个", cnt);

	//计算素数
	//int i = 101;
	//int cnt = 0;
	//for (; i <= 200; i+=2)
	//{
	//	int k = 3;
	//	for (; k <= sqrt(i); k+=2)  sqrt为开平方
	//	{
	//		if (i%k == 0)
	//			break;
	//	}
	//	if (k == i)
	//	{
	//		cnt++;
	//		printf("%d ", i);
	//	}
	//}
	//printf("\n共计%d", cnt);

	//计算闰年
	//int i = 1000;
	//int cnt = 0;
	//for (; i <= 2000; i++)
	//{
	//	if ((i%4==0)&&(i%100!=0)||(i%400==0))
	//	{
	//		printf("%d ", i);
	//		cnt++;
	//	}
	//}
	//printf("\n共计%d个", cnt);

//辗转相除法原理
//100  30
//100/30=3...10
//求100和30最大公约数
//即求3*30+10和30的最大公约数
//30/10=3...0
//..即3*3*10+10和3*10的最大公约数

//计算两数最大公约数
//void MaxF(a,b)
//{
//	if (a < b)
//	{
//		int c = a;
//		a = b;
//		b = a;
//	}
//}

//int zzxc(int n, int m)
//{
//	while (n%m)
//	{
//		int r = n % m;
//		n = m;
//		m = r;
//	}
//	return m;
//}
//
//int main()
//{
//	int n, m;
//	scanf("%d%d", &n, &m);
//	//void MaxF(n, m);
//	int rslt = zzxc(n, m);
//	printf("%d和%d的最大公约数=%d", n, m, rslt);
	
	//int i = 1;
	//for (; i < 100; i++)
	//{
	//	if (i % 3 == 0)
	//		printf("%d ", i);
	//}

	//int a = 3;
	//for (; a < 100; a += 3)
	//{
	//	printf("%d ", a);
	//}

	//从大到小排序数字
	//int a, b, c, t;
	//scanf("%d%d%d", &a, &b, &c);
	//if (a < b)
	//{
	//	t = a;
	//	a = b;
	//	b = t;
	//}
	//if (a < c)
	//{
	//	t = a;
	//	a = c;
	//	c = t;
	//}
	//if (b < c)
	//{
	//	t = b;
	//	b = c;
	//	c = b;
	//}
	//printf("%d>%d>%d", a, b, c);

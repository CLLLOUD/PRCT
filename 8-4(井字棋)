//源文件：test
#define _CRT_SECURE_NO_WARNINGS 1
#include <iostream>
#include <stdio.h>
#include "game.h"
using namespace std;

void menu()
{
	printf("****************************************************\n");
	printf("**********************劲爆井子棋********************\n");
	printf("*********输入'1'开始新游戏  输入'0'退出游戏*********\n");
	printf("****************************************************\n");
}

void game()
{
	char ret;
	char board[row][col];
	initboard(board, row, col);
	displayboard(board, row, col);
	while (1)
	{
		playermove(board, row, col);
		displayboard(board, row, col);
		ret = judge(board, row, col);
		if(ret!='c')
		{
			Sleep(500);
			break;
		}
		computermove(board, row, col);
		displayboard(board, row, col);
		ret = judge(board, row, col);
		if (ret != 'c')	
		{
			Sleep(500);
			break;
		}
	}
	if(ret=='X')
	{
		cout << "玩家获胜" << endl;
	}
	if(ret=='O')
	{
		cout << "电脑获胜" << endl;
	}
	if (ret == 'p')
	{
		cout << "平局" << endl;
	}
}

void test()
{
	int choice = 2;
	srand((unsigned int)time(NULL));
	do {
		menu();
		cin >> choice;
		Sleep(500);
		switch (choice)
		{
		case 1:
			cout << "游戏开始" << endl;
			Sleep(500);
			game();
			break;
		case 0:
			cout << "退出游戏";
			break;
		default:
			cout << "请重新输入" << endl;
			break;
		}
	} while (choice);
}

int main()
{
	test();
	return 0;
}



//源文件：game
#define _CRT_SECURE_NO_WARNINGS 1
#include "game.h"
using namespace std;

void initboard(char board[row][col],int x,int y)
{
	for (int i=0; i < x; i++)
	{
		for (int j=0; j < y; j++)
		{
			board[i][j] = ' ';
		}
	}
}

void displayboard(char board[row][col], int x, int y)
{
	cout << " ";
	for (int j = 0; j < y; j++)
	{
		printf("--- ");
	}
	cout << endl;
	for (int i = 0; i < x; i++)
	{
		cout << "|";
		for (int j = 0; j < y; j++)
		{
			printf(" %c |", board[i][j]);
		}
			cout << endl << " ";
			for (int j = 0; j < y; j++)
			{
				printf("--- ");
			}
		cout << endl;
	}
}

void playermove(char board[row][col], int x, int y)
{
	int i, j;
	Sleep(500);
	cout << "玩家走 请输入要下的坐标>>";
	cin >> i >> j;
	while (1)
	{
		Sleep(500);
		while (i < 1 || i > x || j < 1 || j > y)
		{
			cout << "坐标超出棋盘范围 请重新输入>>";
			cin >> i >> j;
		}
		if (board[i - 1][j - 1] == ' ')
		{
			board[i - 1][j - 1] = 'X';
			break;
		}
		else
		{
			cout << "该位置已存在棋子 请重新输入>>";
			cin >> i >> j;
		}
	}
}

void computermove(char board[row][col], int x, int y)
{
	Sleep(500);
	cout << "电脑走" << endl;
	Sleep(500);
	int i, j;
	while (1)
	{
		i = rand() % x;
		j = rand() % y;
		if (board[i][j] == ' ')
		{
			board[i][j] = 'O';
			break;
		}
	}
}

int jdgfull(char board[row][col], int x, int y)
{
	for (int i = 0; i < x; i++)
	{
		for (int j = 0; j < y; j++)
		{
			if(board[i][j]!=' ')
			{
				return 0;
			}
		}
	}
	return 1;
}

char judge(char board[row][col], int x, int y)
{
	for (int i = 0; i < x; i++)
	{
		if (board[i][0] == board[i][1] && board[i][0] == board[i][2] && board[i][0] != ' ')
		{
			return board[i][0];
		}
	}
	for (int i = 0; i < y; i++)
	{
		if (board[0][i] == board[1][i] && board[0][i] == board[2][i] && board[0][i] != ' ')
		{
			return board[0][i];
		}
	}
	if (board[0][0] == board[1][1] && board[0][0] == board[2][2] && board[0][0] != ' ')
	{
		return board[0][0];
	}
	if (board[0][2] == board[1][1] && board[0][2] == board[2][0] && board[0][2] != ' ')
	{
		return board[0][2];
	}
	if(jdgfull(board,x, y))
	{
		return 'p';
	}
	return 'c';
}



//头文件：game
#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <Windows.h>
#pragma once
#define row 3
#define col 3

void initboard(char board[row][col], int x, int y);
void displayboard(char board[row][col], int x, int y);
void playermove(char board[row][col], int x, int y);
void computermove(char board[row][col], int x, int y);
char judge(char board[row][col], int x, int y);
